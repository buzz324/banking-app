{"ast":null,"code":"var _jsxFileName = \"/Users/I568173/Code/bank-app/src/accounts/AccountsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountsPage() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setAccounts(data);\n      } else {\n        console.error('Fetched data is not an array:', data);\n      }\n    }).catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Accounts for User \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account Type: \", account.accountType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountsPage, \"fJAvoW9/low9Cqj3GBNhd0tuIzc=\", false, function () {\n  return [useParams];\n});\n_c = AccountsPage;\nexport default AccountsPage;\nvar _c;\n$RefreshReg$(_c, \"AccountsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","AccountsPage","_s","userId","accounts","setAccounts","fetch","then","response","json","data","Array","isArray","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","account","accountType","balance","id","_c","$RefreshReg$"],"sources":["/Users/I568173/Code/bank-app/src/accounts/AccountsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction AccountsPage() {\n  const { userId } = useParams();\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`)\n      .then(response => response.json())\n      .then(data => {\n        if (Array.isArray(data)) {\n          setAccounts(data);\n        } else {\n          console.error('Fetched data is not an array:', data);\n        }\n      })\n      .catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>Accounts for User {userId}</h2>\n      <div>\n        {accounts.map(account => (\n          <div key={account.id}>\n            <p>Account Type: {account.accountType}</p>\n            <p>Balance: {account.balance}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AccountsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,6CAA6CH,MAAM,EAAE,CAAC,CACzDI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBL,WAAW,CAACK,IAAI,CAAC;MACnB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEJ,IAAI,CAAC;MACtD;IACF,CAAC,CAAC,CACDK,KAAK,CAACD,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAI,oBAAkB,EAACb,MAAM;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCpB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACiB,GAAG,CAACC,OAAO,iBACnBtB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAAG,gBAAc,EAACM,OAAO,CAACC,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CpB,OAAA;UAAAgB,QAAA,GAAG,WAAS,EAACM,OAAO,CAACE,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzBE,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA9BQD,YAAY;EAAA,QACAH,SAAS;AAAA;AAAA4B,EAAA,GADrBzB,YAAY;AAgCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}