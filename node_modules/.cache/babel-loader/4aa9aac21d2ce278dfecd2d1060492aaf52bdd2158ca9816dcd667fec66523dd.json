{"ast":null,"code":"var _jsxFileName = \"/Users/I568173/Code/bank-app/src/accounts/AccountsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountsPage() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [accounts, setAccounts] = useState([]);\n  const [userName, setUserName] = useState('');\n  useEffect(() => {\n    // Fetch user details\n    fetch(`http://localhost:8080/api/users/${userId}`).then(response => response.json()).then(data => {\n      if (data && data.name) {\n        setUserName(data.name);\n      } else {\n        console.error('Fetched user data is not valid:', data);\n      }\n    }).catch(error => console.error('Error fetching user details:', error));\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setAccounts(data);\n      } else {\n        console.error('Fetched data is not an array:', data);\n      }\n    }).catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Accounts for \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account Type: \", account.accountType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountsPage, \"IuxSrjj+C8iF28iGsqKrzxZO6/4=\", false, function () {\n  return [useParams];\n});\n_c = AccountsPage;\nexport default AccountsPage;\nvar _c;\n$RefreshReg$(_c, \"AccountsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","AccountsPage","_s","userId","accounts","setAccounts","userName","setUserName","fetch","then","response","json","data","name","console","error","catch","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","account","accountType","balance","id","_c","$RefreshReg$"],"sources":["/Users/I568173/Code/bank-app/src/accounts/AccountsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction AccountsPage() {\n  const { userId } = useParams();\n  const [accounts, setAccounts] = useState([]);\n  const [userName, setUserName] = useState('');\n\n  useEffect(() => {\n    // Fetch user details\n    fetch(`http://localhost:8080/api/users/${userId}`)\n    .then(response => response.json())\n    .then(data => {\n    if (data && data.name) {\n        setUserName(data.name);\n    } else {\n        console.error('Fetched user data is not valid:', data);\n    }\n    })\n    .catch(error => console.error('Error fetching user details:', error));\n\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`)\n      .then(response => response.json())\n      .then(data => {\n        if (Array.isArray(data)) {\n          setAccounts(data);\n        } else {\n          console.error('Fetched data is not an array:', data);\n        }\n      })\n      .catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>Accounts for {userName}</h2>\n      <div>\n        {accounts.map(account => (\n          <div key={account.id}>\n            <p>Account Type: {account.accountType}</p>\n            <p>Balance: {account.balance}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AccountsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,mCAAmCL,MAAM,EAAE,CAAC,CACjDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACd,IAAIA,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE;QACnBN,WAAW,CAACK,IAAI,CAACC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACHC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEH,IAAI,CAAC;MAC1D;IACA,CAAC,CAAC,CACDI,KAAK,CAACD,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;IAErEP,KAAK,CAAC,6CAA6CL,MAAM,EAAE,CAAC,CACzDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;QACvBP,WAAW,CAACO,IAAI,CAAC;MACnB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEH,IAAI,CAAC;MACtD;IACF,CAAC,CAAC,CACDI,KAAK,CAACD,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAI,eAAa,EAACb,QAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCvB,OAAA;MAAAmB,QAAA,EACGf,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACnBzB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,GAAG,gBAAc,EAACM,OAAO,CAACC,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CvB,OAAA;UAAAmB,QAAA,GAAG,WAAS,EAACM,OAAO,CAACE,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzBE,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA3CQD,YAAY;EAAA,QACAH,SAAS;AAAA;AAAA+B,EAAA,GADrB5B,YAAY;AA6CrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}