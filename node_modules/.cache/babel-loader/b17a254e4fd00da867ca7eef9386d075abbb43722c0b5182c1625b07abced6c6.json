{"ast":null,"code":"var _jsxFileName = \"/Users/I568173/Code/bank-app/src/accounts/TransferPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransferPage() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [amount, setAmount] = useState('');\n  const [fromAccount, setFromAccount] = useState('');\n  const [toAccount, setToAccount] = useState('');\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    // Fetch accounts for the user\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`).then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setAccounts(data);\n      } else {\n        console.error('Fetched data is not an array:', data);\n      }\n    }).catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n  const handleTransfer = () => {\n    const transferRequest = {\n      fromAccountId: fromAccount,\n      toAccountId: toAccount,\n      amount: parseFloat(amount)\n    };\n    fetch('http://localhost:8080/api/transfer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(transferRequest)\n    }).then(response => response.text()).then(data => {\n      console.log(data);\n      navigate(`/accounts/${userId}`);\n    }).catch(error => console.error('Error performing transfer:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer Funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"From Account:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromAccount,\n          onChange: e => setFromAccount(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: account.id,\n            children: [account.accountType, \" - Balance: \", account.balance]\n          }, account.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"To Account:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toAccount,\n          onChange: e => setToAccount(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: account.id,\n            children: [account.accountType, \" - Balance: \", account.balance]\n          }, account.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransfer,\n      children: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TransferPage, \"86nm+R+4Z8ULf5sdAkqn5lGADM0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TransferPage;\nexport default TransferPage;\nvar _c;\n$RefreshReg$(_c, \"TransferPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","TransferPage","_s","userId","navigate","amount","setAmount","fromAccount","setFromAccount","toAccount","setToAccount","accounts","setAccounts","fetch","then","response","json","data","Array","isArray","console","error","catch","handleTransfer","transferRequest","fromAccountId","toAccountId","parseFloat","method","headers","body","JSON","stringify","text","log","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","account","id","accountType","balance","type","onClick","_c","$RefreshReg$"],"sources":["/Users/I568173/Code/bank-app/src/accounts/TransferPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nfunction TransferPage() {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [amount, setAmount] = useState('');\n  const [fromAccount, setFromAccount] = useState('');\n  const [toAccount, setToAccount] = useState('');\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(() => {\n    // Fetch accounts for the user\n    fetch(`http://localhost:8080/api/accounts?userId=${userId}`)\n      .then(response => response.json())\n      .then(data => {\n        if (Array.isArray(data)) {\n          setAccounts(data);\n        } else {\n          console.error('Fetched data is not an array:', data);\n        }\n      })\n      .catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n\n  const handleTransfer = () => {\n    const transferRequest = {\n      fromAccountId: fromAccount,\n      toAccountId: toAccount,\n      amount: parseFloat(amount)\n    };\n\n    fetch('http://localhost:8080/api/transfer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(transferRequest)\n    })\n      .then(response => response.text())\n      .then(data => {\n        console.log(data);\n        navigate(`/accounts/${userId}`);\n      })\n      .catch(error => console.error('Error performing transfer:', error));\n  };\n\n  return (\n    <div>\n      <h2>Transfer Funds</h2>\n      <div>\n        <label>\n          From Account:\n          <select value={fromAccount} onChange={(e) => setFromAccount(e.target.value)}>\n            <option value=\"\">Select Account</option>\n            {accounts.map(account => (\n              <option key={account.id} value={account.id}>\n                {account.accountType} - Balance: {account.balance}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label>\n          To Account:\n          <select value={toAccount} onChange={(e) => setToAccount(e.target.value)}>\n            <option value=\"\">Select Account</option>\n            {accounts.map(account => (\n              <option key={account.id} value={account.id}>\n                {account.accountType} - Balance: {account.balance}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label>\n          Amount:\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n        </label>\n      </div>\n      <button onClick={handleTransfer}>Transfer</button>\n      <button onClick={() => navigate(-1)}>Back</button>\n    </div>\n  );\n}\n\nexport default TransferPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}